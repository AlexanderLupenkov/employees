<!DOCTYPE mapper     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.altech.employees.repository.EmployeeRepository">
    <resultMap id="employee" type="com.altech.employees.domain.entity.Employee">
        <id column="id" property="id"/>
        <result column="firstName" property="firstName"/>
        <result column="lastName" property="lastName"/>
        <result column="email" property="email"/>
        <association property="organization"
                     column="organizationId"
                     javaType="com.altech.employees.domain.entity.Organization"
                     select="com.altech.employees.repository.OrganizationRepository.findById"
                     fetchType="eager"/>
        <association property="status"
                     column="statusId"
                     javaType="com.altech.employees.domain.entity.Status"
                     select="com.altech.employees.repository.StatusRepository.findById"
                     fetchType="eager"/>
    </resultMap>

    <select id="findAll" resultMap="employee">
        SELECT *
        from EMPLOYEE;
    </select>

    <select id="count" resultType="java.lang.Long">
        select count(id)
        from employee;
    </select>

    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        insert into employee(firstname, lastname, email, organizationId, statusID)
        values (#{firstName}, #{lastName}, #{email}, #{organization.id}, #{status.id})
    </insert>

    <insert id="saveAll" parameterType="java.util.List">
        insert into employee(firstname, lastname, email, organizationId, statusID)
        values
        <foreach collection="list" item="element" index="index" open="(" separator="),(" close=")">
            #{element.firstName},#{element.lastName},#{element.email},
            #{element.organization.id}, #{element.status.id}
        </foreach>
    </insert>

    <delete id="delete" parameterType="com.altech.employees.domain.entity.Employee">
        delete
        from employee
        where id = #{id}
    </delete>


    <select id="search" parameterType="java.lang.String" resultMap="employee">
        select *
        from employee e
        where lower(e.firstName) like lower(concat('%', #{string}, '%'))
           or lower(e.lastName) like lower(concat('%', #{string}, '%'))
    </select>

    <update id="update" parameterType="com.altech.employees.domain.entity.Employee">
        update employee
        set firstName=#{firstName},
            lastName=#{lastName},
            email=#{email},
            organizationId=#{organization.id},
            statusId=#{status.id}
        where id = #{id}
    </update>

</mapper>